import paramiko
import time
import os
import schedule
import json

devnet_csr = {'hostName' : '192.168.130.195',
            'hostIP' : '192.168.130.195'
            }

dev_cred = {
        'username' : 'admin',
        'password' : 'admin3&P',
        'port' : 22
}

ssh = paramiko.SSHClient()

def fileName(hostname):
    DateName = str(time.strftime("%Y%m%d-%H_%M_%S", time.gmtime()))
    output = DateName + "-" + hostname + ".ios"
    return output

def writeMyFile(inputData, hostname):
    localFile = fileName(hostname)
    with open(localFile, 'w') as my_data:
        my_data.write(inputData)

def ssh_ExecCommand(ssh_client : paramiko.SSHClient, devnet_csr):
    ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    ssh_client.connect(hostname=dev_cred['hostname'], 
                       port=dev_cred['port'], 
                       username=dev_cred['username'], 
                       password=dev_cred['password'])
    command = "show run"
    stdin, stdout, stderr = ssh_client.exec_command(command)
    output = stdout.read().decode()
    writeMyFile(output,devnet_csr['hostname'])
    ssh_client.close()
    return(output)

"""
def ssh_InvokeShell(ssh_client : paramiko.SSHClient, hostname, port, username, password):
    #ssh_client = paramiko.SSHClient()
    ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    ssh_client.connect(hostname=hostname, 
                       port=port, 
                       username=username, 
                       password=password,
                        look_for_keys=False,
                        allow_agent=False)
    device_access = ssh_client.invoke_shell()
    print("connected ...")
    device_access.send(b'terminal length 0\n')
    device_access.send(b'show run\n')
    time.sleep(3)
    output = device_access.recv(65535).decode()
    #print(output)
    device_access.close()
    return(output)
"""

def readMyFile(inputFile):
    ref = open(inputFile)
    ref_content = ref.readlines()
    ref.close()  
    print(f"Current directory {os.getcwd()}")
    print(ref_content,'utf8')  

def exportJSON(devnet_csr, mode):
    if mode == "w":
        with open("device.json","w") as myJson:
            #json.dump(devnet_csr, myJson) 
            json.dump(devnet_csr, myJson) 
            myJson.close()
    else:
        with open("device.json","a") as myJson:
            myJson.write('\n' + json.dumps(devnet_csr))

def importJSON(fileName):
    with open(fileName, 'r') as myJson:
        data = json.load(myJson)
        print(data)

#ssh_ExecCommand(ssh, devnet_csr)

exportJSON(devnet_csr,"w")
exportJSON(devnet_csr,"a")
exportJSON(devnet_csr,"a") 

importJSON("device.json")

print("Process complete !!!")

#sshInvokeShell(ssh, **devnet_csr)
#schedule.every(15).seconds.do(connectSimple(ssh, **devnet_csr))








